// Code generated by go-swagger; DO NOT EDIT.

package systeminfo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cryptk/kubernetes-mimic/internal/harbor/models"
)

// GetSysteminfoGetcertReader is a Reader for the GetSysteminfoGetcert structure.
type GetSysteminfoGetcertReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetSysteminfoGetcertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSysteminfoGetcertOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSysteminfoGetcertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSysteminfoGetcertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSysteminfoGetcertOK creates a GetSysteminfoGetcertOK with default headers values
func NewGetSysteminfoGetcertOK(writer io.Writer) *GetSysteminfoGetcertOK {
	return &GetSysteminfoGetcertOK{

		Payload: writer,
	}
}

/* GetSysteminfoGetcertOK describes a response with status code 200, with default header values.

Get default root certificate successfully.
*/
type GetSysteminfoGetcertOK struct {

	/* To set the filename of the downloaded file.
	 */
	ContentDisposition string

	Payload io.Writer
}

func (o *GetSysteminfoGetcertOK) Error() string {
	return fmt.Sprintf("[GET /systeminfo/getcert][%d] getSysteminfoGetcertOK  %+v", 200, o.Payload)
}
func (o *GetSysteminfoGetcertOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetSysteminfoGetcertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Disposition
	hdrContentDisposition := response.GetHeader("Content-Disposition")

	if hdrContentDisposition != "" {
		o.ContentDisposition = hdrContentDisposition
	}

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSysteminfoGetcertNotFound creates a GetSysteminfoGetcertNotFound with default headers values
func NewGetSysteminfoGetcertNotFound() *GetSysteminfoGetcertNotFound {
	return &GetSysteminfoGetcertNotFound{}
}

/* GetSysteminfoGetcertNotFound describes a response with status code 404, with default header values.

Not found the default root certificate.
*/
type GetSysteminfoGetcertNotFound struct {
}

func (o *GetSysteminfoGetcertNotFound) Error() string {
	return fmt.Sprintf("[GET /systeminfo/getcert][%d] getSysteminfoGetcertNotFound ", 404)
}

func (o *GetSysteminfoGetcertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSysteminfoGetcertInternalServerError creates a GetSysteminfoGetcertInternalServerError with default headers values
func NewGetSysteminfoGetcertInternalServerError() *GetSysteminfoGetcertInternalServerError {
	return &GetSysteminfoGetcertInternalServerError{}
}

/* GetSysteminfoGetcertInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetSysteminfoGetcertInternalServerError struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

func (o *GetSysteminfoGetcertInternalServerError) Error() string {
	return fmt.Sprintf("[GET /systeminfo/getcert][%d] getSysteminfoGetcertInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSysteminfoGetcertInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetSysteminfoGetcertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
